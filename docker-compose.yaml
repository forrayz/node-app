version: '3'

services:
  nodejs:
    build:
      context: .
      dockerfile: nodejs.dockerfile
    image: nodejs
    container_name: nodejs
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=db
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
    ports:
      - "0:8080"
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    networks:
      - app-network
    command: ./wait-for.sh db:27017 -- /home/node/app/node_modules/.bin/nodemon app.js
    depends_on: db

  db:
    image: mongo:4.1.8-xenial
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    volumes:
      - dbdata:/data/db
    networks:
      - app-network
    ports: 0:27017/tcp
  
  adminer:
    image: adminer
    restart: always
    ports:
      - 0:8080
    links:
      - db
    depends_on: 
      - db
    healthcheck:
      test: curl -f http://localhost:8080 || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
  
  log:
     image: halverneus/static-file-server:latest
     ports:
      - 0:8080
     volumes:
       - "log_volume:/web"
     depends_on: 
      - ter-app
networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
  node_modules:
  log_volume: